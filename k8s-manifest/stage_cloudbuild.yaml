#for building image
steps:
  #update image tag
  - name: 'gcr.io/kaniko-project/executor:latest'
    id: kaniko
    args:
      [
        '--dockerfile=./Dockerfile',
        '--context=dir:///workspace/.',
        '--cache=true',
        '--cache-ttl=24h',
        '--build-arg=RELEASE_MODE=${_RELEASE_MODE}',
        '--destination=us-west1-docker.pkg.dev/${PROJECT_ID}/promptql-docs/promptql-docs:${SHORT_SHA}',
      ]

  #change in Deployment file
  - name: 'gcr.io/cloud-builders/gcloud'
    id: update image in deployment file
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        sed -i 's|latest|${SHORT_SHA}|g' ./k8s-manifest/k8s/deployment.yaml
        sed -i 's|RELEASE_MODE_PLACEHOLDER|${_RELEASE_MODE}|g' ./k8s-manifest/k8s/deployment.yaml
    env:
      - 'release_mode=${_RELEASE_MODE}'

  #deploy kubernetes manifest
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Deploy deployment.yaml
    args: ['apply', '-f', './k8s-manifest/k8s/']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=${_REGION}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTERNAME}'

  #deploy service file for stage/prod kubernetes manifest
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Deploy kube files
    args: ['apply', '-f', './k8s-manifest/k8s/service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=${_REGION}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTERNAME}'

timeout: 3600s
substitutions:
  _REGION: us-west2
  _CLUSTERNAME: prod-website-cloud-us-we2-gke-01
  _RELEASE_MODE: staging
options:
  workerPool: 'projects/websitecloud-352908/locations/us-west2/workerPools/gke-vpn-pool'
